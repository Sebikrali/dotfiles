# Environment setup

if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:$HOME/bin/scripts:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$HOME/bin/scripts:$PATH"
fi
export PATH

# Nvim as Default Editor
export VISUAL=nvim
export EDITOR="$VISUAL"
# nvim as manpager
export MANPAGER="nvim +Man!"
export PAGER="less"

# mcfly
export MCFLY_FUZZY=0
export MCFLY_RESULTS_SORT=LAST_RUN
export MCFLY_PROMPT="❯"
export MCFLY_KEY_SCHEME=vim

# Ranger Conf file
#export RANGER_LOAD_DEFAULT_RC=FALSE

# Starship Shell Prompt
export STARSHIP_CONFIG=~/.config/starship/starship.toml

# Node Version Manager
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# SSH agent
env=~/.ssh/agent.env

agent_load_env () { test -f "$env" && . "$env" >| /dev/null ; }

agent_start () {
    (umask 077; ssh-agent >| "$env")
    . "$env" >| /dev/null ; }

agent_load_env

# agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2=agent not running
agent_run_state=$(ssh-add -l >| /dev/null 2>&1; echo $?)

if [ ! "$SSH_AUTH_SOCK" ] || [ $agent_run_state = 2 ]; then
    agent_start
    ssh-add ~/.ssh/github ~/.ssh/gitlab ~/.ssh/reset_gitlab
elif [ "$SSH_AUTH_SOCK" ] && [ $agent_run_state = 1 ]; then
    ssh-add ~/.ssh/github ~/.ssh/gitlab ~/.ssh/reset_gitlab
fi

unset env
clear

# vim: syntax=bash
